<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>EPShare Rides</title>
<link href="./bulma.min.css" rel="stylesheet" type="text/css" />
<link href="./style.css" rel="stylesheet" type="text/css" />
<script src="https://kit.fontawesome.com/16ae8e710d.js" crossorigin="anonymous"></script>
<link rel="icon" href="./favicon.ico" type="image/x-icon">
<link rel="stylesheet" href="./style.css">
<script src="./upcoming.js"></script>

</head>
<body>
<main>

<section class="hero is-fullheight">
<!-- Hero head: will stick at the top -->
            <div class="hero-head">
                             <header class="navbar">
                               <div class="container">
                                 <div class="navbar-brand">
                                   <a class="navbar-item">
                                     <img src="EPS Logo - Transparent-4.png" alt="Logo">
                                     <h1 class="title is-3" style="margin-left: 10px" >EPShare Rides
                                     </h1>
                                   </a>
                                   <span class="navbar-burger " data-target="navbarMenuHeroC" id="nav-toggle">
                                     <span></span>
                                     <span></span>
                                     <span></span>
                                   </span>
                                 </div>
                                 <div id="navbarMenuHeroC" class="navbar-menu ">
                                   <div class="navbar-end">

                                     <div class="is-button is-link">

                                       <div class="navbar-item">
                                         <span style="font-size: 1em; color: #30B700; float: right">
                                           <i class="fa-solid fa-leaf"></i>
                                         </span>
                                         <div class="buttons" style="margin: 10px;margin-right: 0px;">

                                           <a class="button is-link is-outlined " href="/logout">
                                            Log out
                                           </a>

                                            <div class="navbar-item has-dropdown is-hoverable " onclick="document.getElementById('navbar-dropdown').style.visibility = 'visible';">


                                           <a class="button is-link" id="name_button" style="background: linear-gradient(105deg, #3273DC, #275CBF);">
                                          <%= firstName %> <%= lastName %> 
                                           </a>



                                            <div id="filler" style="width: 130px; background-color: transparent; height: 20px; position: absolute; margin-top: -15px;"></div>
                                                <div class="navbar-dropdown" id="navbar-dropdown">
                                                  <a class="navbar-item" href="/updateSettings">
                                                   Update settings
                                                  </a>
                                                  <a class="navbar-item" href="mailto:nmahesh@eastsideprep.org; ayamashita@eastsideprep.org; pjain27@eastsideprep.org; ajosan@eastsideprep.org">
                                                    Report a bug
                                                  </a>
                                                  <a class="navbar-item" href="/deleteAccount">
                                                    Delete account
                                                  </a>
                                                  <hr class="navbar-divider">
                                                  <div class="navbar-item">
                                                    Version Beta 0.1.0
                                                  </div>

                                                </div>

                                              </div>
                                            

                                         </div>
                                       </div>

                                       </div>
                                   </div>
                                 </div>
                               </div>
                             </header>
            </div>


<!-- Hero content: will be in the middle -->
<div class="hero-body"  style="padding-bottom: 80px;">

 
  
<div class="container" style="margin-top: 0px; width: 100%; ">

  <div id="create_event"style="margin-bottom: 0px">
    </div>
  
<div class=" " style="position: absolute; margin-top: -40px;  width: 100%; ">
<label for="filter">Filter by: </label>
<select name="filter" id="filter">
<option value="all" >All</option>
<option value="sports" >Sports</option>
<option value="academic teams" >Academic teams</option>
<option value="socials" >Socials</option>
<option value="other" >Other</option>
</select>
  <button onclick="var create_event = document.getElementById('create_event'); create_event.style.marginBottom='50px'; create_event.innerHTML = `<form>
  <label for='name'>Event name:</label>
  <input type='text' id='ename' name='name'>
  <label for='location'>Location: </label>
  <input type='text' id='elocation' name='location'>
   <label for='date'>Date and time:</label>
  <input type='datetime-local' id='edate' name='date'>
  <label for='category'>Category: </label>
  <select name='category' id='ecategory'>
    <option value='sports'>Sports</option>
    <option value='academic teams'>Academic teams</option>
    <option value='socials'>Socials</option>
    <option value='other'>Other</option>
  </select>
  <input type='submit' onclick='createevent()'>

  
</form>`">Create event (admin only)</button>

  
  
</div>
<!--Start here  -->




<div id="eventsJS">
<!-- 
<article class="panel is-link has-text-centered" style=" margin-top: 10px;" >
 <div style="float: left; margin: 7px; left:0px; position: absolute " class="booker" >
   <span class="panel-icon" style='color: white; display: inline'>
     <i class="fas fa-book" aria-hidden="true" style="margin: 13px; margin-left: 15px;"></i>
     <p style="color: white; display: inline; font-size: 15px; " >Booked by Karla Harris</p>
   </span>
 </div>
 <p class="panel-heading link-heading" style="margin-top: -10px;background: linear-gradient(105deg, #3273DC, #275CBF); " >

Debate Tournament


 </p>


 <div class="panel-block">
   <p class="control has-icons-left" style="width: 100px;">

     <span style="color: #999999; margin-right: 5px;"><i class="fa-solid fa-location-dot "></i></span>Location: Mount Vernon Highschool <br class="extraspace" style='display: none; '>  <span id="clock"  style="color: #999999; margin-right: 5px; margin-left: 10px;"><i class="fa-solid fa-clock "></i></span> Date: 2/29/24 9:30 PM
   </p>
   <div class="buttons upcoming-buttons" style="float: left; display: inline-block;">

   <div class="button js-modal-trigger" style="margin-right: 5px;" data-target="modal-js-example">Offer to carpool</div>

   <div class="button js-modal-trigger" data-target="modal-js-register">Register for this event</div>
    </div>
    </div>




</article> -->


<!-- Stop here -->




</div>




</div>

                           </div>
<!-- Hero footer: will stick at the bottom -->
<div class="hero-foot">
<nav class="tabs is-boxed is-fullwidth">
<div class="container">
 <ul>
   <li class="is-active"><a href="/">Upcoming Events</a></li>
   <li  ><a href="/mycarpools" >My Carpools</a></li>

   <li  ><a href="/friends">Friends</a></li>

 </ul>
</div>
</nav>
</div>

</section>

</main>

<script>
 
  </script>

<!-- start here -->
                             <div class="modal " id="modal-js-example">
                               <div class="modal-background" style="background-color: rgba(10,10,10,.50)"></div>
                               <div class="modal-card" style="">
                                 <p class="panel-heading has-text-centered" style="padding: 15px;">
                                 Offer to Carpool

                                      <button class="delete" aria-label="close" onclick="closeAllModals()" style="float: right"></button>

                                 </p>

                                 <section class="modal-card-body">

                                     <div class="container">

                                        <label >Carpool information </label>
                                       <div class="field">
                                          <a class="panel-block" id="carpoolinfo" style="border-radius: 5px; padding:0px;">

                                          <input style="margin-right: 10px; " id="fname" class="input" type="fname"  placeholder="Driver first name">




                                             <input style="" id="lname" class="input" type="lname"  placeholder="Driver last name">                 
                                             </a>
                                           </div>


                                        <input class="input" id="seats" type="number" min="1" max="9"  placeholder="Number of available car seats" style=" margin-top: -5px; margin-bottom: 10px; ">



                                       <label >Type of route </label>
                                       <div class="field" style="margin-bottom: 10px;">
                                        <div class="control">

                                          <div class="select" style="margin-right: 10px; " >
                                            <form>
                                            <select id="route-type">
                                              <option value="route" >Home to home</option>
                                              <option value="point"  >Common meeting point</option>
                                            </select>
                                              </form>
                                          </div>
                                     </div>

                                       </div>


                                       <div class="field">
                                          <label id="address-label">Home address </label>

                                         <div class="autocomplete-container" id=""> <div class='control' id="autocomplete-container">
                                           </div>
                                       </div>
                                       </div>
                                     </div>


                                    </section>
                                   <footer class="modal-card-foot" style="background-color: white; border-width: 1px; padding: 10px; ">
                                       <div class="buttons" style="margin-left: 0px;">
                                         <button class="button is-link " onclick="offer();window.location.href='/mycarpools'">Create carpool</button>
                                         <button class="button" aria-label="close" onclick="closeAllModals()">Cancel</button>
                                            </div>
                                         </footer>
                                     </div>
                                   </div> 

<!-- end here -->





  <!-- start here -->
                                     <div class="modal " id="modal-js-register">
                                       <div class="modal-background" style="background-color: rgba(10,10,10,.50)"></div>
                                       <div class="modal-card" style="">
                                         <p class="panel-heading has-text-centered" style="padding: 15px;">
                                         Register to a Carpool

                                              <button class="delete" aria-label="close" onclick="closeAllModals()" style="float: right"></button>

                                         </p>

                                         <section class="modal-card-body">

                                             <div class="container">

                                                <label >Choose a carpool </label>




                                               <div style="overflow: auto;">
                                                 <div id="registerJS">
                                               <!-- <div class="notification" style="padding: 10px;   margin-bottom: 10px;">
                                         <div class="button  selectCarpool" style=" margin-left: 10px; margin-top: 4px; background-color: transparent; float: right" onclick=" if (this.classList[2] == 'is-focused') {unfocus()} else {unfocus(); this.classList.add('is-focused')}">Select</div>
                                                 <div style="float: right; margin-top: 3px;"  >2/6 signed up</div>
                                                                           Organizer: <a style="color: #3273dc" href="mailto:ajosan@eastsideprep.org">ajosan@eastsideprep.org</a>
                                                   <br>  Route type: Home to home
<br> 
                                               </div>    -->
                                                 </div>
                                                           

                                          </div>                                                                      
    </div>                                                                              <div class="field">
                                             <label >Your home address </label>

                                            <div class="autocomplete-container " id=""> <div class='control' id="autocomplete-container2" >
                                              <!-- South Kirkland Park and Ride, Bellevue, WA 98004, United States of America -->
                                              </div>
                                          </div>
                                          </div>
                                          </section>
                                      <footer class="modal-card-foot" style="background-color: white; border-width: 1px; padding: 10px; ">
                                       <var></var>
                                          <div class="buttons" style="margin-left: 0px;">
                                            <button class="button is-link " onclick="joinCarpool()">Join carpool</button>
                                            <button class="button" aria-label="close" onclick="closeAllModals()">Cancel</button>
                                               </div>
                                            </footer>
                                        </div>

                                     </div>
   <!-- end here -->





<script type="text/javascript">

  console.error("418 I'm a teapot");

  var eventsW2 = [];
 
  function sendData(data){
    datarray.push(data);
    console.log(data);
  }
  var datarray = [];
  function createevent() {
    firstName="<%= firstName %> "
    lastName="<%= lastName %> "
    eventName=document.getElementById("ename").value
    wlocation=document.getElementById("elocation").value
    console.log(wlocation)
    dateb=document.getElementById("edate").value//hotdogs
    var components = dateb.split(/[-T:]/);
    // Create a new Date object
    var dateTimeObject = new Date(components[0], components[1] - 1, components[2], components[3], components[4]);
    // Format the Date object as a string in the desired format
    date = dateTimeObject.toLocaleString('en-US', {
        month: 'numeric',
        day: 'numeric',
        year: 'numeric',
        hour: 'numeric',
        minute: 'numeric',
        hour12: true
    });
    category=document.getElementById("ecategory").value
    const data = {
      firstName,
      lastName,
      eventName,
      wlocation,
      date,
      category
    };
    console.log(data);

    const jsonData = JSON.stringify(data);

    const url = "/api/events";

    fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: jsonData,
    })
  }
  let eventsW;
  var request = new Request("/api/events", {
    method: "GET",
    headers: new Headers({
      Accept: 'application/json',
      'Content-Type': 'application/json',
    })
  });
  fetch(request)
    .then((response) => response.json())
    .then((data) => {
      
      eventsW = data;
      console.log(eventsW);
      eventsW2 = sortJSON(eventsW,'date', '123'); 
      console.log(eventsW2);

 
console.log("length:" + eventsW2.length)
  for (var i = 0; i < eventsW2.length; i++){
  var obj = eventsW2[i];
    
  document.getElementById("eventsJS").innerHTML += `<article class="panel is-link has-text-centered" style=" margin-top: 10px;" >
 <div style="float: left; margin: 7px; left:0px; position: absolute " class="booker" >
   <span class="panel-icon" style='color: white; display: inline'>
     <i class="fas fa-book" aria-hidden="true" style="margin: 13px; margin-left: 15px;"></i>
     <p style="color: white; display: inline; font-size: 15px; " >Booked by `+ obj["firstName"] +` `+ obj["lastName"] +`</p>
   </span>
 </div>
 <p class="panel-heading link-heading" style="margin-top: -10px;background: linear-gradient(105deg, #3273DC, #275CBF); " >

`+obj["eventName"]+`


 </p>


 <div class="panel-block">
   <p class="control has-icons-left" style="width: 100px;">

     <span style="color: #999999; margin-right: 5px;"><i class="fa-solid fa-location-dot "></i></span>Location: `+obj["wlocation"]+`<br class="extraspace" style='display: none; '>  <span id="clock"  style="color: #999999; margin-right: 5px; margin-left: 10px;"><i class="fa-solid fa-clock "></i></span> Date: `+obj["date"]+`
    </p>
   <div class="buttons upcoming-buttons" style="float: left; display: inline-block;">

   <div class="button js-modal-trigger" style="margin-right: 5px;" data-target="modal-js-example" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Offer to carpool</div>

   <div class="button js-modal-trigger" data-target="modal-js-register" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Register for this event</div>
    </div>
    </div>




</article>`;
  
  }
//sort events by date
      function sortJSON(arr, key, way) {
          return arr.sort(function(a, b) {
              var datex = a[key]; var datey = b[key];

            datex = new Date(datex)
             datey = new Date(datey)
            x = datex.getTime() / 1000
             y = datey.getTime() / 1000
              if (way === '123') { return ((x < y) ? -1 : ((x > y) ? 1 : 0)); }
              if (way === '321') { return ((x > y) ? -1 : ((x < y) ? 1 : 0)); }
          });
      }

      // eventsW2 = sortJSON(eventsW,'date', '123'); 
      // console.log("Sorted events: " + JSON.stringify(eventsW2));
      
      
      
      
      document.getElementById("filter").onchange = filter;
      function filter() {
        document.getElementById("eventsJS").innerHTML = ``
         for (var i = 0; i < eventsW.length; i++){
          var obj = eventsW[i];
           if (document.getElementById("filter").value == "all") {

               document.getElementById("eventsJS").innerHTML += `<article class="panel is-link has-text-centered" style=" margin-top: 10px;" >
              <div style="float: left; margin: 7px; left:0px; position: absolute " class="booker" >
                <span class="panel-icon" style='color: white; display: inline'>
                  <i class="fas fa-book" aria-hidden="true" style="margin: 13px; margin-left: 15px;"></i>
                  <p style="color: white; display: inline; font-size: 15px; " >Booked by `+ obj["firstName"] +` `+ obj["lastName"] +`</p>
                </span>
              </div>
              <p class="panel-heading link-heading" style="margin-top: -10px;background: linear-gradient(105deg, #3273DC, #275CBF); " >

             `+obj["eventName"]+`


              </p>


              <div class="panel-block">
                <p class="control has-icons-left" style="width: 100px;">

                  <span style="color: #999999; margin-right: 5px;"><i class="fa-solid fa-location-dot "></i></span>Location: `+obj["wlocation"]+`<br class="extraspace" style='display: none; '>  <span id="clock"  style="color: #999999; margin-right: 5px; margin-left: 10px;"><i class="fa-solid fa-clock "></i></span> Date: `+obj["date"]+`
                 </p>
                <div class="buttons upcoming-buttons" style="float: left; display: inline-block;">

                <div class="button js-modal-trigger" style="margin-right: 5px;" data-target="modal-js-example" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Offer to carpool</div>

                <div class="button js-modal-trigger" data-target="modal-js-register" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Register for this event</div>
                 </div>
                 </div>




             </article>`;
                }

           else if (document.getElementById("filter").value == obj["category"]) {
          document.getElementById("eventsJS").innerHTML += `<article class="panel is-link has-text-centered" style=" margin-top: 10px;" >
         <div style="float: left; margin: 7px; left:0px; position: absolute " class="booker" >
           <span class="panel-icon" style='color: white; display: inline'>
             <i class="fas fa-book" aria-hidden="true" style="margin: 13px; margin-left: 15px;"></i>
             <p style="color: white; display: inline; font-size: 15px; " >Booked by `+ obj["firstName"] +` `+ obj["lastName"] +`</p>
           </span>
         </div>
         <p class="panel-heading link-heading" style="margin-top: -10px;background: linear-gradient(105deg, #3273DC, #275CBF); " >

        `+obj["eventName"]+`


         </p>


         <div class="panel-block">
           <p class="control has-icons-left" style="width: 100px;">

             <span style="color: #999999; margin-right: 5px;"><i class="fa-solid fa-location-dot "></i></span>Location: `+obj["wlocation"]+`<br class="extraspace" style='display: none; '>  <span id="clock"  style="color: #999999; margin-right: 5px; margin-left: 10px;"><i class="fa-solid fa-clock "></i></span> Date: `+obj["date"]+`
            </p>
           <div class="buttons upcoming-buttons" style="float: left; display: inline-block;">

           <div class="button js-modal-trigger" style="margin-right: 5px;" data-target="modal-js-example" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Offer to carpool</div>

           <div class="button js-modal-trigger" data-target="modal-js-register" id="`+ obj["id"] + `" onclick=sendData('`+obj["id"]+`')>Register for this event</div>
            </div>
            </div>




        </article>`;
           }
          }
        modalFunctions()
      }
      function modalFunctions(){
        
      
      function openModal($el) {
      $el.classList.add('is-active');

        let carpoools;
        var request = new Request("/api/carpools", {
          method: "GET",
          headers: new Headers({
            Accept: 'application/json',
            'Content-Type': 'application/json',
          })
        });
        fetch(request)
          .then((response) => response.json())
          .then((data) => {
            carpoools = data;
            console.log(carpoools);

        console.log(carpoools)
            document.getElementById("registerJS").innerHTML = ``;
   
            //checks if the carpools id matches an events id
         for (var i = 0; i < carpoools.length; i++){
          var obj = carpoools[i];
 
             if (obj["nameOfEvent"] == datarray[datarray.length - 1]) {
               
           
          
           //datarray[datarray.length - 1]
           
           
           var routeType;
           if (obj["route"] == "route") {
             routeType = "Home to home"
           }
           else if (obj["route"] == "point") {
                routeType = "Common meeting point"
              }
            
        document.getElementById("registerJS").innerHTML +=
        `<div class="notification" style="padding: 10px;   margin-bottom: 10px;">
                                               <div class="button  selectCarpool" style=" margin-left: 10px; margin-top: 4px; background-color: transparent; float: right" onclick=" if (this.classList[2] == 'is-focused') {unfocus()} else {unfocus(); this.classList.add('is-focused')}">Select</div>
                                                       <div style="float: right; margin-top: 3px;"  >` + obj["carpoolers"].length + `/`+ obj["seats"] +` signed up</div>
                                                                                 Organizer: <a style="color: #3273dc" href="mailto:` + obj["email"] + `">` + obj["email"] + `</a>
                                                         <br>  Route type: ` + routeType + `
                <br>                                                                                          </div>   `
         }
           }
           })
             .catch((error) => {
               console.error(error)
             });
      }

      function closeModal($el) {
      $el.classList.remove('is-active');
      }

      function closeAllModals() {
      (document.querySelectorAll('.modal') || []).forEach(($modal) => {
      closeModal($modal);
      });
      }

      // Add a click event on buttons to open a specific modal
      (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
      const modal = $trigger.dataset.target;
      const $target = document.getElementById(modal);

      $trigger.addEventListener('click', () => {
      openModal($target);
      });
      });

      // Add a click event on various child elements to close the parent modal
      (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .cancel') || []).forEach(($close) => {
      const $target = $close.closest('.modal');

      $close.addEventListener('click', () => {
      closeModal($target);
      });
      });

      // Add a keyboard event to close all modals
      document.addEventListener('keydown', (event) => {
      const e = event || window.event;

      if (e.keyCode === 27) { // Escape key
      closeAllModals();
      }
      });

      }
      modalFunctions()





       
  })
  .catch((error) => {
    console.error(error);
  });



  
  




  
  function offerACar(firstName, lastName, seats, route, wlocation, carpoolers, nameOfEvent){
    let email = "<%= email %>"
    const newcarpools = {
      firstName,
      lastName,
      seats,
      route,
      wlocation,//location is a used variable
      carpoolers,
      nameOfEvent,
      email
    };
    console.log(newcarpools);
  
    const jsonData = JSON.stringify(newcarpools);
  
    const url = "/api/carpools";
  
    fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: jsonData,
    })
      .then((response) => {
        console.log(response);
        // Open verification checker
      })
      .catch((error) => console.error("Error:", error));
  }
    
/* 
The addressAutocomplete takes as parameters:
- a container element (div)
- callback to notify about address selection
- geocoder options:
- placeholder - placeholder text for an input element
- type - location type
*/





      document.body.onmousedown = function() {
      if (document.getElementById('address-input') != null) {
         document.getElementById("autocomplete-container").classList.remove("is-loading");
        document.getElementById("autocomplete-container2").classList.remove("is-loading");
      }

      }
        var arr = [];


      function addressAutocomplete(containerElement, callback, options) {
      // create input element
      var inputElement = document.createElement("input");
      inputElement.setAttribute("type", "text");
      inputElement.setAttribute("placeholder", options.placeholder);
      inputElement.setAttribute("id", "address-input");
      inputElement.classList.add("input");
      containerElement.appendChild(inputElement);



      // add input field clear button
      var clearButton = document.createElement("div");
      clearButton.classList.add("clear-button");
      addIcon(clearButton);
      clearButton.addEventListener("click", (e) => {
      e.stopPropagation();
      inputElement.value = '';
      callback(null);
      clearButton.classList.remove("visible");
      closeDropDownList();
      });
      containerElement.appendChild(clearButton);

      /* Current autocomplete items data (GeoJSON.Feature) */
      var currentItems;

      /* Active request promise reject function. To be able to cancel the promise when a new request comes */
      var currentPromiseReject;

      /* Focused item in the autocomplete list. This variable is used to navigate with buttons */
      var focusedItemIndex;

      /* Execute a function when someone writes in the text field: */
      inputElement.addEventListener("input", function(e) {
      var currentValue = this.value;

      document.getElementById("autocomplete-container").classList.add("is-loading");
      document.getElementById("autocomplete-container2").classList.add("is-loading");

      /* Close any already open dropdown list */
      closeDropDownList();

      // Cancel previous request promise
      if (currentPromiseReject) {
      currentPromiseReject({
      canceled: true
      });
      }

      if (!currentValue) {
      clearButton.classList.remove("visible");
      return false;
      }

      // Show clearButton when there is a text
      clearButton.classList.add("visible");

      /* Create a new promise and send geocoding request */
      var promise = new Promise((resolve, reject) => {
      currentPromiseReject = reject;

      var apiKey = "992ef3d60d434f2283ea8c6d70a4898d";
      var url = `https://api.geoapify.com/v1/geocode/autocomplete?text=${encodeURIComponent(currentValue)}&limit=5&apiKey=${apiKey}`;

      if (options.type) {
      url += `&type=${options.type}`;
      }

      fetch(url)
      .then(response => {
       // check if the call was successful
       if (response.ok) {
         response.json().then(data => resolve(data));

       } else {
         response.json().then(data => reject(data));
       }
      });
      });

      promise.then((data) => {
      document.getElementById("autocomplete-container").classList.remove("is-loading");
      document.getElementById("autocomplete-container2").classList.remove("is-loading");
      currentItems = data.features;

      /*create a DIV element that will contain the items (values):*/
      var autocompleteItemsElement = document.createElement("div");
      autocompleteItemsElement.setAttribute("class", "autocomplete-items");
      containerElement.appendChild(autocompleteItemsElement);

      /* For each item in the results */
      data.features.forEach((feature, index) => {
      /* Create a DIV element for each element: */
      var itemElement = document.createElement("DIV");
      /* Set formatted address as item value */
      itemElement.innerHTML = feature.properties.formatted;
      itemElement.classList.add("hoverAddress");
      /* Set the value for the autocomplete text field and notify: */
      itemElement.addEventListener("click", function(e) {
       inputElement.value = currentItems[index].properties.formatted;



       callback(currentItems[index]);

       /* Close the list of autocompleted values: */
       closeDropDownList();
      });

      autocompleteItemsElement.appendChild(itemElement);
      });
      }, (err) => {
      if (!err.canceled) {
      console.log(err);
      }
      });
      });

      /* Add support for keyboard navigation */
      inputElement.addEventListener("keydown", function(e) {
      var autocompleteItemsElement = containerElement.querySelector(".autocomplete-items");
      if (autocompleteItemsElement) {
      var itemElements = autocompleteItemsElement.getElementsByTagName("div");
      if (e.keyCode == 40) {
      e.preventDefault();
      /*If the arrow DOWN key is pressed, increase the focusedItemIndex variable:*/
      focusedItemIndex = focusedItemIndex !== itemElements.length - 1 ? focusedItemIndex + 1 : 0;
      /*and and make the current item more visible:*/-
      setActive(itemElements, focusedItemIndex);
      } else if (e.keyCode == 38) {
      e.preventDefault();

      /*If the arrow UP key is pressed, decrease the focusedItemIndex variable:*/
      focusedItemIndex = focusedItemIndex !== 0 ? focusedItemIndex - 1 : focusedItemIndex = (itemElements.length - 1);
      /*and and make the current item more visible:*/
      setActive(itemElements, focusedItemIndex);
      } else if (e.keyCode == 13) {
      /* If the ENTER key is pressed and value as selected, close the list*/
      e.preventDefault();
      if (focusedItemIndex > -1) {
       closeDropDownList();
      }
      }
      } else {
      if (e.keyCode == 40) {
      /* Open dropdown list again */
      var event = document.createEvent('Event');
      event.initEvent('input', true, true);
      inputElement.dispatchEvent(event);
      }
      }
      });

      function setActive(items, index) {
      if (!items || !items.length) return false;

      for (var i = 0; i < items.length; i++) {
      items[i].classList.remove("autocomplete-active");
      }

      /* Add class "autocomplete-active" to the active element*/
      items[index].classList.add("autocomplete-active");

      // Change input value and notify
      inputElement.value = currentItems[index].properties.formatted;
      callback(currentItems[index]);
      }

      function closeDropDownList() {
      var autocompleteItemsElement = containerElement.querySelector(".autocomplete-items");
      if (autocompleteItemsElement) {
      containerElement.removeChild(autocompleteItemsElement);
      }

      focusedItemIndex = -1;
      }

      function addIcon(buttonElement) {
      var svgElement = document.createElementNS("", 'svg');
      svgElement.setAttribute('viewBox', "0 0 24 24");
      svgElement.setAttribute('height', "24");


      }

      /* Close the autocomplete dropdown when the document is clicked. 
      Skip, when a user clicks on the input field */
      document.addEventListener("click", function(e) {
      if (e.target !== inputElement) {
      closeDropDownList();
      } else if (!containerElement.querySelector(".autocomplete-items")) {
      // open dropdown list again
      var event = document.createEvent('Event');
      event.initEvent('input', true, true);
      inputElement.dispatchEvent(event);
      }
      });

      }

      addressAutocomplete(document.getElementById("autocomplete-container"), (data) => {
      console.log("Selected option: ");
      console.log(data);
      console.log(data.properties.formatted);
      arr.push(data.properties.formatted);
      }, {

      placeholder: "Enter an address here"

      });

      addressAutocomplete(document.getElementById("autocomplete-container2"), (data) => {
      console.log("Selected option: ");
      console.log(data);
      console.log(data.properties.formatted);
      arr.push(data.properties.formatted);
      }, {

      placeholder: "Enter an address here"

      });

     


    // Code for the second function
    function joinCarpool() {
      let newArray = document.getElementById("address-input").value
      var personName = "<%= firstName %> <%= lastName %>";
      console.log(newArray+ " " + personName);
    }

    function offer(id) {
      let newArray = document.getElementById("address-input").value
      let DriverFName = document.getElementById("fname").value;
      let DriverLName = document.getElementById("lname").value;
      let Seats = document.getElementById("seats").value;
      let route = document.getElementById("route-type").value;
      let Carpoolers = []
      // var personName = "<%= firstName %> <%= lastName %>";
      console.log(newArray+ " " + DriverFName + " " + DriverLName + " " + Seats);
      offerACar(DriverFName, DriverLName, Seats, route, newArray, Carpoolers, datarray[datarray.length - 1]);
    }



    

  // Call the first function and then execute the second function using .then()
  
</script>
                                       
<script>
// tell the embed parent frame the height of the content
if (window.parent && window.parent.parent){
window.parent.parent.postMessage(["resultsFrame", {
height: document.body.getBoundingClientRect().height,
slug: "akzrtm26"
}], "*")
}

// always overwrite window.name, in case users try to set it manually
window.name = "result"
</script>






<!-- Content ... -->




















<script> 
  function closeAllModals() {
  (document.querySelectorAll('.modal') || []).forEach(($modal) => {
  closeModal($modal);
  });
  }
  function closeModal($el) {
  $el.classList.remove('is-active');
  }


  
var route_type = document.getElementById("route-type");
var address_label =  document.getElementById("address-label");

function changeLabel() {
if (route_type.value == "route") {
address_label.innerText = "Your home address";
}
else if (route_type.value == "point") {
address_label.innerText = "Meeting point";
}
}

route_type.onchange = changeLabel;
changeLabel();


function unfocus() {
var selects = document.getElementsByClassName('selectCarpool')
for (const element of selects) { // You can use `let` instead of `const` if you like
element.classList.remove('is-focused');
}
}


</script>
                                       <script defer>
                                         function navBurger() {
                                             var burger = document.getElementById('nav-toggle');
                                             var menu = document.getElementById('navbarMenuHeroC');
                                             burger.addEventListener('click', function() {
                                                 burger.classList.toggle('is-active');
                                                 menu.classList.toggle('is-active');
                                             });
                                         }
                                         navBurger()


                                       </script>
</body>
</html>